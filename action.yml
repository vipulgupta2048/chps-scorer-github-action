name: 'CHPS Scorer'
description: 'Run automated checks for the CHPs (Container Hardening Points) specification on container images'
author: 'vipulgupta2048'

inputs:
  image:
    description: 'Container image to scan (e.g., nginx:latest)'
    required: true
  skip-cves:
    description: 'Skip CVE scanning'
    required: false
    default: 'false'
  dockerfile:
    description: 'Path to Dockerfile for additional checks'
    required: false
  output:
    description: 'Output format (text or json)'
    required: false
    default: 'text'

outputs:
  output:
    description: 'Raw output from the CHPs scoring script (text or JSON, as requested)'
    value: ${{ steps.run-scorer.outputs.output }}

runs:
  using: "composite"
  steps:
    - name: Run CHPs Scorer
      id: run-scorer
      shell: bash
      run: |
        # Prepare command arguments
        ARGS=""

        # Add output format flag if json
        if [ "${{ inputs.output }}" == "json" ]; then
          ARGS="$ARGS -o json"
        fi

        # Add skip-cves flag if enabled
        if [ "${{ inputs.skip-cves }}" == "true" ]; then
          ARGS="$ARGS --skip-cves"
        fi

        # Add dockerfile path if provided
        if [ -n "${{ inputs.dockerfile }}" ]; then
          DOCKERFILE="${{ inputs.dockerfile }}"
          # Check if file exists
          if [ ! -f "$DOCKERFILE" ]; then
            echo "::error::Dockerfile not found at $DOCKERFILE"
            exit 1
          fi
          ARGS="$ARGS -d $DOCKERFILE"
        fi

        # Run the CHPs scorer in a container
        RESULTS=$(docker run --privileged \
          --volume /var/run/docker.sock:/var/run/docker.sock \
          --volume $(pwd):/workspace \
          --workdir /workspace \
          ghcr.io/chps-dev/chps-scorer:latest \
          $ARGS ${{ inputs.image }})

        # Remove ANSI escape codes from the output
        CLEANED_RESULTS=$(echo "$RESULTS" | sed -r 's/\x1B\[[0-9;]*[mK]//g')

        echo "output<<EOF" >> $GITHUB_OUTPUT
        echo "$CLEANED_RESULTS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

branding:
  icon: 'shield'
  color: 'blue'